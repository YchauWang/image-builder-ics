# Copyright 2020 The Kubernetes Authors.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Download containerd
  win_get_url:
    url: '{{ containerd_url }}'
    dest: '%TEMP%\containerd.tar.gz'
    checksum: '{{ containerd_sha256 }}'
    checksum_algorithm: "sha256"
  register: containerd

- name: Create containerd directory structure
  win_file:
    path:  "{{ item }}"
    state: directory
  loop: 
    - '%programfiles%\containerd'
    - '%ALLUSERSPROFILE%\containerd\state'
    - '%ALLUSERSPROFILE%\containerd\root'
    - '%SystemDrive%/opt/cni/bin'
    - '%SystemDrive%/etc/cni/net.d'

- name: Check if containerd exists
  win_stat:
    path: '%programfiles%\containerd\containerd.exe'
  register: containerd_file

- name: Unpack containerd binaries
  win_command: cmd /c tar -zxvf {{ containerd.dest }} -C "%programfiles%\containerd" --strip-components 1
  when: not containerd_file.stat.exists

- name: Add containerd to path
  win_path:
    elements:
    - '%programfiles%\containerd'
    scope: machine

- name: Get All Users profile path
  win_shell: $env:ALLUSERSPROFILE.Replace("\", "\\")
  register: profile

- name: Get Install Drive
  win_shell: $env:SYSTEMDRIVE
  register: systemdrive

- name: Copy containerd config overrides
  win_template:
    dest: '%programfiles%\containerd\config.toml'
    src: config.toml
  vars:
    allusersprofile: "{{ profile.stdout | trim }}"
    plugin_bin_dir: "{{ systemdrive.stdout | trim }}/opt/cni/bin"
    plugin_conf_dir: "{{ systemdrive.stdout | trim }}/etc/cni/net.d"

- name: Check if a Containerd service is installed
  win_service:
    name: containerd
  register: containerd_service

- name: Register Containerd
  win_shell: |
    #refresh the path to ensure ansible sees update
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
    containerd.exe --register-service
  when: containerd_service.exists == false

- name: Ensure Containerd Service is running
  win_service:
    name: containerd
    start_mode: auto
    state: started

- name: Pre-pull containerd images
  win_shell: |
    #refresh the path to ensure ansible sees update
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
    ctr.exe -n k8s.io images pull {{ item }}
  loop: "{{ images }}"
  async: 1800
  poll: 60
  when: (prepull | bool)
  vars:
    images: "{{ prepull_images[distribution_version] | default([]) }}"

- name: Pre-pull containerd additional images
  win_shell: |
    #refresh the path to ensure ansible sees update
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
    ctr.exe -n k8s.io images pull {{ item }}
  loop: "{{ additional_prepull_images_list }}"
  async: 1800
  poll: 60
  when: (prepull | bool) and (additional_prepull_images_list|length > 0) 
  
  